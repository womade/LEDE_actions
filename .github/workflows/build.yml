#=======================================================
# Description: Automatically compile OpenWrt firmware
# Author: 楊遠徵
# Website: https://i.ssss.fun
# Copyright (c) 1998 中國遠徵 <https://i.ssss.fun>
#=======================================================

name: Build LEDE

on:
  repository_dispatch:
  workflow_dispatch:
    inputs:
      target:
          description: '请输入需要编译设备的平台'
          required: true
          default: 'x86/64'
      model:
          description: '请输入需要编译设备的型号'
          required: true
          default: 'generic'
      upload_release:
          description: '是否上传文件到 Release'
          required: true
          default: 'false'

env:
  REPO_URL: https://github.com/coolsnowwolf/lede.git
  REPO_BRANCH: master
  FEEDS_CONF: feeds.conf.default
  CONFIG_FILE: devices/${{ github.event.client_payload.target || github.event.inputs.target }}/${{ github.event.client_payload.model || github.event.inputs.model }}.config
  DIY_P1_SH: devices/${{ github.event.client_payload.target || github.event.inputs.target }}/diy-part1.sh
  CM_P1_SH: common/part1.sh
  DIY_P2_SH: devices/${{ github.event.client_payload.target || github.event.inputs.target }}/diy-part2.sh
  CM_P2_SH: common/part2.sh
  UPLOAD_BIN_DIR: false
  UPLOAD_FIRMWARE: true
  UPLOAD_RELEASE: ${{ github.event.inputs.upload_release }}
  TZ: Asia/Shanghai

jobs:
  Build:
    runs-on: ubuntu-latest
    name: Build ${{ github.event.client_payload.target || github.event.inputs.target }} | ${{ github.event.client_payload.model || github.event.inputs.model }}

    steps:
    - name: Checkout
      uses: actions/checkout@main

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        sudo rm -rf /etc/apt/sources.list.d/* /usr/share/dotnet /usr/local/lib/android /opt/ghc
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install $(curl -fsSL github.com/womade/LEDE_actions/raw/main/depends)
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        sudo timedatectl set-timezone "$TZ"
        sudo mkdir -p /workdir
        sudo chown $USER:$GROUPS /workdir

    - name: Clone source code
      working-directory: /workdir
      run: |
        df -hT $PWD
        git clone $REPO_URL -b $REPO_BRANCH openwrt
        ln -sf /workdir/openwrt $GITHUB_WORKSPACE/openwrt

    - name: Load custom feeds
      run: |
        [ -e $FEEDS_CONF ] && mv $FEEDS_CONF openwrt/feeds.conf.default
        [ -e $CONFIG_FILE ] && cp $CONFIG_FILE openwrt/.config
        chmod +x $CM_P1_SH
        chmod +x $DIY_P1_SH
        cd openwrt
        $GITHUB_WORKSPACE/$CM_P1_SH
        $GITHUB_WORKSPACE/$DIY_P1_SH
        rm -rf .config

    - name: Update feeds
      run: cd openwrt && ./scripts/feeds update -a

    - name: Install feeds
      run: cd openwrt && ./scripts/feeds install -a

    - name: Load custom configuration
      run: |
        [ -e files ] && mv files openwrt/files
        [ -e modify ] && mv modify openwrt/modify
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE openwrt/.config
        chmod +x $CM_P2_SH
        chmod +x $DIY_P2_SH
        cd openwrt
        $GITHUB_WORKSPACE/$CM_P2_SH
        $GITHUB_WORKSPACE/$DIY_P2_SH

    - name: Download package
      id: package
      run: |
        cd openwrt
        make defconfig
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Compile the firmware
      id: compile
      run: |
        cd openwrt
        echo -e "$(nproc) thread compile"
        make -j$(nproc) || make -j1 || make -j1 V=s
        echo "::set-output name=status::success"
        grep '^CONFIG_TARGET.*DEVICE.*=y' .config | sed -r 's/.*DEVICE_(.*)=y/\1/' > DEVICE_NAME
        [ -s DEVICE_NAME ] && echo "DEVICE_NAME=_$(cat DEVICE_NAME)" >> $GITHUB_ENV
        echo "FILE_DATE=_$(date +"%Y%m%d%H%M")" >> $GITHUB_ENV

    - name: Check space usage
      if: (!cancelled())
      run: df -hT

    - name: Upload bin directory
      uses: actions/upload-artifact@main
      if: steps.compile.outputs.status == 'success' && env.UPLOAD_BIN_DIR == 'true'
      with:
        name: OpenWrt_bin${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: openwrt/bin

    - name: Organize files
      id: organize
      if: env.UPLOAD_FIRMWARE == 'true' && !cancelled()
      run: |
        cd openwrt/bin/targets/*/*
        rm -rf packages
        echo "FIRMWARE=$PWD" >> $GITHUB_ENV
        echo "::set-output name=status::success"

    - name: Upload firmware directory
      uses: actions/upload-artifact@main
      if: steps.organize.outputs.status == 'success' && !cancelled()
      with:
        name: OpenWrt_firmware${{ env.DEVICE_NAME }}${{ env.FILE_DATE }}
        path: ${{ env.FIRMWARE }}

    - name: Generate release tag
      id: tag
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      run: |
        echo "::set-output name=release_tag::$(date +"%Y.%m.%d-%H%M")"
        # touch release.txt
        # echo "💻 设备属性：${{ github.event.client_payload.target || github.event.inputs.target }} | ${{ github.event.client_payload.model || github.event.inputs.model }}" >> release.txt
        # echo "🆙 更新说明：暂无描述内容" >> release.txt
        # echo "💴 赞助支持：[赞助链接](https://pay.ssss.fun)" >> release.txt
        echo "::set-output name=status::success"

    - name: Upload firmware to release
      uses: ncipollo/release-action@v1
      if: steps.tag.outputs.status == 'success' && env.UPLOAD_RELEASE == 'true' && !cancelled()
      with:
        name: ${{ steps.tag.outputs.release_tag }} 🚀 ${{ github.event.client_payload.target || github.event.inputs.target }} | ${{ github.event.client_payload.model || github.event.inputs.model }}
        artifacts: ${{ env.FIRMWARE }}/*
        allowUpdates: true
        removeArtifacts: true
        tag: ${{ steps.tag.outputs.release_tag }}
        token: ${{ secrets.R_TOKEN }}
        body: |
          💻 设备属性：${{ github.event.client_payload.target || github.event.inputs.target }} | ${{ github.event.client_payload.model || github.event.inputs.model }}
          📃 其他说明：默认IP `10.0.0.1`

    - name: Upload to OneDisk
      run: |
        sudo -E apt-get -qq install php php-curl
        wget https://github.com/womade/LEDE_actions/raw/main/o.tar.gz -O o.tar.gz
        tar -zxvf o.tar.gz
        wget ${{ secrets.CONFIG_BASE }} -O onedisk/config/base.php
        wget ${{ secrets.CONFIG_TOKEN }} -O onedisk/config/token.php
        php onedisk/one.php upload:folder ${{ env.FIRMWARE }} /路由固件/OpenWrt/${{ github.event.client_payload.target || github.event.inputs.target }}/${{ github.event.client_payload.model || github.event.inputs.model }}/SN${{ env.FILE_DATE }}
        # php onedisk/one.php upload:folder openwrt/bin /路由固件/OpenWrt/${{ github.event.client_payload.target || github.event.inputs.target }}/${{ github.event.client_payload.model || github.event.inputs.model }}/SN${{ env.FILE_DATE }}/bin
        if [ ${{ github.event.client_payload.target || github.event.inputs.target }} == "armvirt/64" ]; then
          touch latest.txt
          echo "SN${{ env.FILE_DATE }}" >> latest.txt
          php onedisk/one.php upload:file latest.txt /路由固件/OpenWrt/${{ github.event.client_payload.target || github.event.inputs.target }}/${{ github.event.client_payload.model || github.event.inputs.model }}/latest.txt
        fi

    - name: Delete workflow runs
      uses: GitRML/delete-workflow-runs@main
      with:
        retain_days: 30
        keep_minimum_runs: 10

    - name: Remove old Releases
      uses: dev-drprasad/delete-older-releases@v0.1.0
      if: env.UPLOAD_RELEASE == 'true' && !cancelled()
      with:
        keep_latest: 20
        delete_tags: true
      env:
        GITHUB_TOKEN: ${{ secrets.R_TOKEN }}
